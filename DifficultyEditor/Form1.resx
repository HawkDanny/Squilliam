<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="factionPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>